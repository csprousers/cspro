
class CSProActionInvoker {

    // --------------------------------------------------------------------------
    // CSProActionInvoker.$Impl
    // --------------------------------------------------------------------------

    static $Impl = {

        createMessage: function(aiThis, action, args, requestId) {
            return JSON.stringify({
                accessToken: aiThis.accessToken,
                action: action,
                arguments: function(args) {
                    if( args === undefined || typeof args === "string" ) {
                        return args;
                    }
                    else {
                        return JSON.stringify(args);
                    }
                }(args),
                requestId: requestId,
                url: window.location.href
            });
        },

        processResponse: function(responseJson) {
            const response = JSON.parse(responseJson);

            if( response.type === "exception" ) {
                throw new Error(response.value);
            }
            else {
                return response.value;
            }
        },

        usingWindows: function() {
            return ( typeof AndroidActionInvoker === "undefined" );
        },

        run: function(aiThis, action, args) {
            const message = this.createMessage(aiThis, action, args);

            // Windows
            if( this.usingWindows() ) {
                const hostSync = window.chrome.webview.hostObjects.sync.cspro;
                hostSync.setHostProperty("ActionInvoker", message);
                var response = hostSync.getHostProperty("ActionInvoker");
            }

            // Android
            else {
                var response = AndroidActionInvoker.run(message);
            }

            return this.processResponse(response);
        },

        // --------------------------------------------------------------------------
        // asynchronous callback processing modeled after:
        // https://gist.github.com/EaseTheWorld/12f73e1d1466d8d570f36b3e49e79a39
        // --------------------------------------------------------------------------

        nextRequestId: 1,
        callbacks: { },

        runAsync: function(aiThis, action, args) {
            const requestId = this.nextRequestId++;
            const message = this.createMessage(aiThis, action, args, requestId);

            return new Promise((resolve, reject) => {
                this.callbacks[requestId] = {
                    resolve: resolve,
                    reject: reject
                };

                // Windows
                if( this.usingWindows() ) {
                    const hostSync = window.chrome.webview.hostObjects.sync.cspro;
                    hostSync.setHostProperty("ActionInvokerAsync", message);
                }

                // Android
                else {
                    AndroidActionInvoker.runAsync(message);
                }
            });
        },

        processAsyncResponse: function(requestId, responseJson) {
            const requestCallback = this.callbacks[requestId];
            delete this.callbacks[requestId];

            try {
                requestCallback.resolve(this.processResponse(responseJson));
            }
            catch(e) {
                requestCallback.reject(e);
            }
        }
    }


    // --------------------------------------------------------------------------
    // CSProActionInvoker
    // --------------------------------------------------------------------------

    constructor(accessToken) {
        this.accessToken = accessToken;
    }

    getWindowForEventListener() {
        if( CSProActionInvoker.$Impl.usingWindows() ) {
            return window.chrome.webview;
        }
        else {
            return window;
        }
    }


    // --------------------------------------------------------------------------
    // the functions for each action
    // --------------------------------------------------------------------------

    // --- CS_AUTOGENERATED_START -----------------------------------------------

    // --- CS_AUTOGENERATED_END -------------------------------------------------
}
